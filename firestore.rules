rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // === 기존 users 규칙 (무변경) ===
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId && request.auth.token.firebase.sign_in_provider != 'anonymous';
      allow read: if request.auth != null;
    }
    // === 새로운 sell_requests 규칙 ===
    match /sell_requests/{requestId} {
      // 판매요청 생성: 인증된 비익명 사용자만 가능
      allow create: if request.auth != null 
                   && request.auth.token.firebase.sign_in_provider != 'anonymous'
                   && request.auth.uid == request.resource.data.sellerId
                   && isValidSellRequest();
      
      // 판매요청 수정/삭제: 작성자만 가능
      allow update, delete: if request.auth != null 
                           && request.auth.uid == resource.data.sellerId
                           && request.auth.token.firebase.sign_in_provider != 'anonymous';
      
      // 판매요청 읽기: 인증된 모든 사용자 (중고거래 특성상)
      allow read: if request.auth != null;
    }

    // === 헬퍼 함수 ===
    function isValidSellRequest() {
      let data = request.resource.data;
      // 앱의 SellRequest 모델에 기반한 필수 필드 목록
      let requiredFields = ['partId', 'sellerId', 'brand', 'modelName', 
                            'purchaseDate', 'requestedPrice', 'imageUrls', 'status'];

      return requiredFields.all(field in data.keys()) &&
             data.partId is string && data.partId.size() > 0 &&
             data.sellerId == request.auth.uid &&
             data.requestedPrice is number && data.requestedPrice > 0 &&
             data.imageUrls is list && data.imageUrls.size() > 0;
    }

    // === 기존 기본 규칙 (무변경) ===
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }
  }
}